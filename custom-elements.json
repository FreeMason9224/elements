{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/vscode-badge/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeBadge",
          "declaration": {
            "name": "VscodeBadge",
            "module": "./vscode-badge"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-badge/vscode-badge.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  declareThemeVariables([\n    {\n      componentProp: '--foreground',\n      vscodeProp: '--vscode-badge-foreground',\n    },\n    {\n      componentProp: '--font-family',\n      vscodeProp: '--vscode-font-family',\n    },\n    {\n      componentProp: '--background',\n      vscodeProp: '--vscode-badge-background',\n    },\n    {\n      componentProp: '--activity-bar-badge-background',\n      vscodeProp: '--vscode-activityBarBadge-background',\n    },\n    {\n      componentProp: '--activity-bar-badge-foreground',\n      vscodeProp: '--vscode-activityBarBadge-foreground',\n    },\n  ]),\n  css`\n    :host {\n      background-color: var(--background);\n      border-radius: 2px;\n      color: var(--foreground);\n      display: inline-block;\n      font-family: var(--font-family);\n      font-size: 11px;\n      font-weight: 400;\n      line-height: 14px;\n      min-width: 18px;\n      padding: 2px 3px;\n      text-align: center;\n      white-space: nowrap;\n    }\n\n    :host([variant='counter']) {\n      border-radius: 11px;\n      box-sizing: border-box;\n      height: 18px;\n      line-height: 1;\n      padding: 3px 5px;\n    }\n\n    :host([variant='activity-bar-counter']) {\n      background-color: var(--activity-bar-badge-background);\n      border-radius: 20px;\n      color: var(--activity-bar-badge-foreground);\n      font-size: 9px;\n      font-weight: 600;\n      line-height: 16px;\n      min-width: 8px;\n      padding: 0 4px;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-badge/vscode-badge.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-badge/vscode-badge.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeBadge",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "description": "default and counter variant background color",
              "name": "--background",
              "default": "var(--vscode-badge-background)"
            },
            {
              "description": "default and counter variant foreground color",
              "name": "--foreground",
              "default": "var(--vscode-badge-foreground)"
            },
            {
              "description": "activity bar variant background color",
              "name": "--activity-bar-badge-background",
              "default": "var(--vscode-activityBarBadge-background)"
            },
            {
              "description": "activity bar variant foreground color",
              "name": "--activity-bar-badge-foreground",
              "default": "var(--vscode-activityBarBadge-foreground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'default' | 'counter' | 'activity-bar-counter'"
              },
              "default": "'default'",
              "attribute": "variant"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'default' | 'counter' | 'activity-bar-counter'"
              },
              "default": "'default'",
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeBadge",
          "declaration": {
            "name": "VscodeBadge",
            "module": "src/vscode-badge/vscode-badge.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-badge",
          "declaration": {
            "name": "VscodeBadge",
            "module": "src/vscode-badge/vscode-badge.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-checkbox/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeCheckbox",
          "declaration": {
            "name": "VscodeCheckbox",
            "module": "./vscode-checkbox"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-checkbox/vscode-checkbox.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  baseStyles,\n  css`\n    .icon {\n      border-radius: 3px;\n    }\n\n    :host(:focus):host(:not([disabled])) .icon {\n      outline: 1px solid var(--focus-border);\n      outline-offset: -1px;\n    }\n  `,\n  formHelperTextStyles\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-checkbox/vscode-checkbox.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-checkbox/vscode-checkbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeCheckbox",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "description": "Label font color. 90% transparency version of `--vscode-foreground` by default.",
              "name": "--foreground",
              "default": "var(--vsc-foreground-translucent)"
            },
            {
              "name": "--icon-background",
              "default": "var(--vscode-settings-checkboxBackground)"
            },
            {
              "name": "--icon-border",
              "default": "var(--vscode-settings-checkboxBorder)"
            },
            {
              "name": "--icon-foreground",
              "default": "var(--vscode-settings-checkboxForeground)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'checkbox'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "_checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_handleKeyDown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "description": "Label text. It is only applied if componnet's innerHTML doesn't contain any text.",
              "name": "label",
              "kind": "field"
            }
          ],
          "events": [
            {
              "name": "vsc-change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "description": "Name which is used as a variable name in the data of the form-container.",
              "name": "name"
            },
            {
              "description": "Attribute pair of the `label` property.",
              "name": "label"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "fieldName": "checked"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'checkbox'",
              "fieldName": "role"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "mixins": [
            {
              "name": "LabelledCheckboxOrRadioMixin",
              "module": "/src/includes/form-button-widget/LabelledCheckboxOrRadio"
            }
          ],
          "superclass": {
            "name": "FormButtonWidgetBase",
            "module": "/src/includes/form-button-widget/FormButtonWidgetBase"
          },
          "tagName": "vscode-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeCheckbox",
          "declaration": {
            "name": "VscodeCheckbox",
            "module": "src/vscode-checkbox/vscode-checkbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-checkbox",
          "declaration": {
            "name": "VscodeCheckbox",
            "module": "src/vscode-checkbox/vscode-checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-button/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeButton",
          "declaration": {
            "name": "VscodeButton",
            "module": "./vscode-button"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-button/vscode-button.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  declareThemeVariables([\n    {\n      componentProp: '--background',\n      vscodeProp: '--vscode-button-background',\n    },\n    {\n      componentProp: '--border',\n      vscodeProp: '--vscode-button-border',\n    },\n    {\n      componentProp: '--foreground',\n      vscodeProp: '--vscode-button-foreground',\n    },\n    {\n      componentProp: '--focus-border',\n      vscodeProp: '--vscode-focusBorder',\n    },\n    {\n      componentProp: '--icon-foreground',\n      vscodeProp: '--vscode-button-foreground',\n    },\n    {\n      componentProp: '--hover-background',\n      vscodeProp: '--vscode-button-hoverBackground',\n    },\n    {\n      componentProp: '--font-family',\n      vscodeProp: '--vscode-font-family',\n    },\n    {\n      componentProp: '--font-size',\n      vscodeProp: '--vscode-font-size',\n    },\n    {\n      componentProp: '--font-weight',\n      vscodeProp: '--vscode-font-weight',\n    },\n    {\n      componentProp: '--secondary-background',\n      vscodeProp: '--vscode-button-secondaryBackground',\n    },\n    {\n      componentProp: '--secondary-foreground',\n      vscodeProp: '--vscode-button-secondaryForeground',\n    },\n    {\n      componentProp: '--secondary-hover-background',\n      vscodeProp: '--vscode-button-secondaryHoverBackground',\n    },\n  ]),\n  css`\n    :host {\n      align-items: center;\n      background-color: var(--background);\n      border-color: var(--border);\n      border-style: solid;\n      border-radius: 2px;\n      border-width: 1px;\n      color: var(--foreground);\n      cursor: pointer;\n      display: inline-block;\n      font-family: var(--font-family);\n      font-size: var(--font-size);\n      font-weight: var(--font-weight);\n      line-height: 22px;\n      overflow: hidden;\n      padding: 1px 13px;\n      user-select: none;\n    }\n\n    :host([secondary]) {\n      color: var(--secondary-foreground);\n      background-color: var(--secondary-background);\n    }\n\n    :host([disabled]) {\n      cursor: default;\n      opacity: 0.4;\n      pointer-events: none;\n    }\n\n    :host(:hover) {\n      background-color: var(--hover-background);\n    }\n\n    :host([disabled]:hover) {\n      background-color: var(--background);\n    }\n\n    :host([secondary]:hover) {\n      background-color: var(--secondary-hover-background);\n    }\n\n    :host([secondary][disabled]:hover) {\n      background-color: var(--secondary-background);\n    }\n\n    :host(:focus),\n    :host(:active) {\n      outline: none;\n    }\n\n    :host(:focus) {\n      background-color: var(--hover-background);\n      outline: 1px solid var(--focus-border);\n      outline-offset: 2px;\n    }\n\n    :host([disabled]:focus) {\n      background-color: var(--background);\n      outline: 0;\n    }\n\n    :host([secondary]:focus) {\n      background-color: var(--secondary-hover-background);\n    }\n\n    :host([secondary][disabled]:focus) {\n      background-color: var(--secondary-background);\n    }\n\n    .wrapper {\n      align-items: center;\n      box-sizing: border-box;\n      display: flex;\n      justify-content: center;\n      position: relative;\n      width: 100%;\n    }\n\n    slot {\n      display: block;\n    }\n\n    .icon {\n      --foreground: var(--icon-foreground);\n      display: block;\n      margin-right: 3px;\n    }\n\n    .icon-after {\n      --foreground: var(--icon-foreground);\n      display: block;\n      margin-left: 3px;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-button/vscode-button.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-button/vscode-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeButton",
          "cssProperties": [
            {
              "name": "--background",
              "default": "var(--vscode-button-background)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-button-foreground)"
            },
            {
              "name": "--icon-foreground",
              "default": "var(--vscode-button-foreground)"
            },
            {
              "name": "--hover-background",
              "default": "var(--vscode-button-hoverBackground)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--secondary-foreground",
              "default": "var(--vscode-button-secondaryForeground)"
            },
            {
              "name": "--secondary-background",
              "default": "var(--vscode-button-secondaryBackground)"
            },
            {
              "name": "--secondary-hover-background",
              "default": "var(--vscode-button-secondaryHoverBackground)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "secondary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "secondary"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'button'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "A [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) before the label",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconAfter",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "A [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) after the label",
              "attribute": "icon-after"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "focused",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_prevTabindex",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "_handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFocus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleFocusBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleBlurBound",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "vsc-click",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched only when button is not in disabled state."
            }
          ],
          "attributes": [
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabindex"
            },
            {
              "name": "secondary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "secondary"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'button'",
              "fieldName": "role"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "A [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) before the label",
              "fieldName": "icon"
            },
            {
              "name": "icon-after",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "A [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) after the label",
              "fieldName": "iconAfter"
            },
            {
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "focused"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeButton",
          "declaration": {
            "name": "VscodeButton",
            "module": "src/vscode-button/vscode-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-button",
          "declaration": {
            "name": "VscodeButton",
            "module": "src/vscode-button/vscode-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-checkbox-group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeCheckboxGroup",
          "declaration": {
            "name": "VscodeCheckboxGroup",
            "module": "./vscode-checkbox-group"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-checkbox-group/vscode-checkbox-group.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  css`\n    :host {\n      display: block;\n    }\n\n    .wrapper {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    :host([variant='vertical']) .wrapper {\n      display: block;\n    }\n\n    ::slotted(vscode-checkbox) {\n      margin-right: 20px;\n    }\n\n    ::slotted(vscode-checkbox:last-child) {\n      margin-right: 0;\n    }\n\n    :host([variant='vertical']) ::slotted(vscode-checkbox) {\n      display: block;\n      margin-bottom: 15px;\n    }\n\n    :host([variant='vertical']) ::slotted(vscode-checkbox:last-child) {\n      margin-bottom: 0;\n    }\n  `,\n  formHelperTextStyles,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-checkbox-group/vscode-checkbox-group.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-checkbox-group/vscode-checkbox-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeCheckboxGroup",
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'group'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'",
              "attribute": "variant",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'group'",
              "fieldName": "role"
            },
            {
              "name": "variant",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'",
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-checkbox-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeCheckboxGroup",
          "declaration": {
            "name": "VscodeCheckboxGroup",
            "module": "src/vscode-checkbox-group/vscode-checkbox-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-checkbox-group",
          "declaration": {
            "name": "VscodeCheckboxGroup",
            "module": "src/vscode-checkbox-group/vscode-checkbox-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-collapsible/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeCollapsible",
          "declaration": {
            "name": "VscodeCollapsible",
            "module": "./vscode-collapsible"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-collapsible/vscode-collapsible.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  declareThemeVariables([\n    {\n      componentProp: '--background',\n      vscodeProp: '--vscode-sideBar-background',\n    },\n    {\n      componentProp: '--focus-border',\n      vscodeProp: '--vscode-focusBorder',\n    },\n    {\n      componentProp: '--font-family',\n      vscodeProp: '--vscode-font-family',\n    },\n    {\n      componentProp: '--header-background',\n      vscodeProp: '--vscode-sideBarSectionHeader-background',\n    },\n    {\n      componentProp: '--icon-foreground',\n      vscodeProp: '--vscode-icon-foreground',\n    },\n    {\n      componentProp: '--title-foreground',\n      vscodeProp: '--vscode-sideBarTitle-foreground',\n    },\n  ]),\n  css`\n    .collapsible {\n      background-color: var(--background);\n    }\n\n    .collapsible-header {\n      align-items: center;\n      background-color: var(--header-background);\n      cursor: pointer;\n      display: flex;\n      height: 22px;\n      line-height: 22px;\n      user-select: none;\n    }\n\n    .collapsible-header:focus {\n      opacity: 1;\n      outline-offset: -1px;\n      outline-style: solid;\n      outline-width: 1px;\n      outline-color: var(--focus-border);\n    }\n\n    .collapsible-header h3 {\n      color: var(--title-foreground);\n      font-family: var(--font-family);\n      font-size: 11px;\n      font-weight: 700;\n      margin: 0;\n      text-transform: uppercase;\n    }\n\n    .header-icon {\n      color: var(--icon-foreground);\n      display: block;\n      margin: 0 3px;\n    }\n\n    .collapsible.open .header-icon {\n      transform: rotate(90deg);\n    }\n\n    .actions {\n      display: none;\n      margin-left: auto;\n      margin-right: 4px;\n    }\n\n    .collapsible.open .actions {\n      display: block;\n    }\n\n    slot[name='actions']::slotted(div) {\n      align-items: center;\n      display: flex;\n    }\n\n    .collapsible-body {\n      display: none;\n      overflow: hidden;\n    }\n\n    .collapsible.open .collapsible-body {\n      display: block;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-collapsible/vscode-collapsible.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-collapsible/vscode-collapsible.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeCollapsible",
          "cssProperties": [
            {
              "name": "--background",
              "default": "var(--vscode-sideBar-background)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--header-background",
              "default": "var(--vscode-sideBarSectionHeader-background)"
            },
            {
              "name": "--icon-foreground",
              "default": "var(--vscode-icon-foreground)"
            },
            {
              "name": "--title-foreground",
              "default": "var(--vscode-sideBarTitle-foreground)"
            }
          ],
          "slots": [
            {
              "description": "Main content",
              "name": "body"
            },
            {
              "description": "Action icons in the header",
              "name": "actions"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "method",
              "name": "_onHeaderClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onHeaderKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-collapsible",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeCollapsible",
          "declaration": {
            "name": "VscodeCollapsible",
            "module": "src/vscode-collapsible/vscode-collapsible.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-collapsible",
          "declaration": {
            "name": "VscodeCollapsible",
            "module": "src/vscode-collapsible/vscode-collapsible.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-context-menu/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeContextMenu",
          "declaration": {
            "name": "VscodeContextMenu",
            "module": "./vscode-context-menu"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-context-menu/vscode-context-menu.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  declareThemeVariables([\n    {\n      componentProp: '--font-family',\n      vscodeProp: '--vscode-font-family',\n    },\n    {\n      componentProp: '--font-size',\n      vscodeProp: '--vscode-font-size',\n    },\n    {\n      componentProp: '--font-weight',\n      vscodeProp: '--vscode-font-weight',\n    },\n    {\n      componentProp: '--background',\n      vscodeProp: '--vscode-menu-background',\n    },\n    {\n      componentProp: '--border',\n      vscodeProp: '--vscode-menu-border',\n    },\n    {\n      componentProp: '--foreground',\n      vscodeProp: '--vscode-menu-foreground',\n    },\n    {\n      componentProp: '--shadow',\n      vscodeProp: '--vscode-widget-shadow',\n    },\n  ]),\n  css`\n    :host {\n      display: block;\n      font-family: var(--font-family);\n      font-size: var(--font-size);\n      font-weight: var(--font-weight);\n      line-height: 1.4em;\n      position: relative;\n    }\n\n    .context-menu {\n      background-color: var(--background);\n      border-color: var(--border);\n      border-radius: 5px;\n      border-style: solid;\n      border-width: 1px;\n      box-shadow: 0 2px 8px var(--shadow);\n      color: var(--foreground);\n      padding: 4px 0;\n      white-space: nowrap;\n    }\n\n    .context-menu:focus {\n      outline: 0;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-context-menu/vscode-context-menu.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-context-menu/vscode-context-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeContextMenu",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--background",
              "default": "var(--vscode-menu-background)"
            },
            {
              "name": "--border",
              "default": "var(--vscode-menu-border)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-menu-foreground)"
            },
            {
              "name": "--shadow",
              "default": "var(--vscode-widget-shadow)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "MenuItemData[]"
              }
            },
            {
              "kind": "field",
              "name": "show",
              "type": {
                "text": "boolean"
              },
              "attribute": "show",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_selectedClickableItemIndex",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "_show",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_wrapperEl",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "MenuItemData[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_clickableItemIndexes",
              "type": {
                "text": "number[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_onClickOutside",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onClickOutsideBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleArrowUp",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleArrowDown",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleEscape",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleEnter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onItemClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onItemMouseOver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onItemMouseOut",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "vsc-select",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "show",
              "type": {
                "text": "boolean"
              },
              "fieldName": "show"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabindex"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-context-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeContextMenu",
          "declaration": {
            "name": "VscodeContextMenu",
            "module": "src/vscode-context-menu/vscode-context-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-context-menu",
          "declaration": {
            "name": "VscodeContextMenu",
            "module": "src/vscode-context-menu/vscode-context-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-context-menu-item/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeContextMenuItem",
          "declaration": {
            "name": "VscodeContextMenuItem",
            "module": "./vscode-context-menu-item"
          }
        },
        {
          "kind": "js",
          "name": "VscClickEventDetail",
          "declaration": {
            "name": "VscClickEventDetail",
            "module": "./vscode-context-menu-item"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-context-menu-item/vscode-context-menu-item.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  declareThemeVariables([\n    {\n      componentProp: '--font-family',\n      vscodeProp: '--vscode-font-family',\n    },\n    {\n      componentProp: '--font-size',\n      vscodeProp: '--vscode-font-size',\n    },\n    {\n      componentProp: '--font-weight',\n      vscodeProp: '--vscode-font-weight',\n    },\n    {\n      componentProp: '--background',\n      vscodeProp: '--vscode-menu-background',\n    },\n    {\n      componentProp: '--border',\n      vscodeProp: '--vscode-menu-selectionBorder',\n    },\n    {\n      componentProp: '--foreground',\n      vscodeProp: '--vscode-menu-foreground',\n    },\n    {\n      componentProp: '--selection-background',\n      vscodeProp: '--vscode-menu-selectionBackground',\n    },\n    {\n      componentProp: '--selection-foreground',\n      vscodeProp: '--vscode-menu-selectionForeground',\n    },\n    {\n      componentProp: '--separator-background',\n      vscodeProp: '--vscode-menu-separatorBackground',\n    },\n  ]),\n  css`\n    :host {\n      display: block;\n      font-family: var(--font-family);\n      font-size: var(--font-size);\n      font-weight: var(--font-weight);\n      line-height: 1.4em;\n      outline: none;\n      position: relative;\n    }\n\n    .context-menu-item {\n      background-color: var(--menu-background);\n      color: var(--menu-foreground);\n      display: flex;\n      user-select: none;\n      white-space: nowrap;\n    }\n\n    .ruler {\n      border-bottom: 1px solid var(--separator-background);\n      display: block;\n      margin: 0 0 4px;\n      padding-top: 4px;\n      width: 100%;\n    }\n\n    .context-menu-item a {\n      align-items: center;\n      border-color: transparent;\n      border-radius: 3px;\n      border-style: solid;\n      border-width: 1px;\n      box-sizing: border-box;\n      color: var(--foreground);\n      cursor: default;\n      display: flex;\n      flex: 1 1 auto;\n      height: 2em;\n      margin-left: 4px;\n      margin-right: 4px;\n      outline: none;\n      position: relative;\n      text-decoration: inherit;\n    }\n\n    :host-context([selected]) .context-menu-item a {\n      background-color: var(--selection-background);\n      border-color: var(--border);\n      color: var(--selection-foreground);\n    }\n\n    .label {\n      background: none;\n      display: flex;\n      flex: 1 1 auto;\n      font-size: 12px;\n      line-height: 1;\n      padding: 0 22px;\n      text-decoration: none;\n    }\n\n    .keybinding {\n      display: block;\n      flex: 2 1 auto;\n      line-height: 1;\n      padding: 0 22px;\n      text-align: right;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-context-menu-item/vscode-context-menu-item.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-context-menu-item/vscode-context-menu-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Child component of [ContextMenu](https://bendera.github.io/vscode-webview-elements/components/vscode-context-menu/).",
          "name": "VscodeContextMenuItem",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--background",
              "default": "var(--vscode-menu-background)"
            },
            {
              "name": "--border",
              "default": "var(--vscode-menu-selectionBorder)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-menu-foreground)"
            },
            {
              "name": "--selection-background",
              "default": "var(--vscode-menu-selectionBackground)"
            },
            {
              "name": "--selection-foreground",
              "default": "var(--vscode-menu-selectionForeground)"
            },
            {
              "name": "--separator-background",
              "default": "var(--vscode-menu-separatorBackground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "keybinding",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "keybinding"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "separator",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "separator"
            },
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabindex"
            },
            {
              "kind": "method",
              "name": "onItemClick",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "vsc-click",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            },
            {
              "name": "keybinding",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "keybinding"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "separator",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "separator"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabindex"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-context-menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeContextMenuItem",
          "declaration": {
            "name": "VscodeContextMenuItem",
            "module": "src/vscode-context-menu-item/vscode-context-menu-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-context-menu-item",
          "declaration": {
            "name": "VscodeContextMenuItem",
            "module": "src/vscode-context-menu-item/vscode-context-menu-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-container/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormContainer",
          "declaration": {
            "name": "VscodeFormContainer",
            "module": "./vscode-form-container"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-container/vscode-form-container.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  css`\n    :host {\n      display: block;\n      max-width: 727px;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-form-container/vscode-form-container.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-container/vscode-form-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeFormContainer",
          "members": [
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "attribute": "responsive",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "490",
              "attribute": "breakpoint"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "FormData"
              },
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "_resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_wrapperElement",
              "type": {
                "text": "Element"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_assignedNodes",
              "type": {
                "text": "VscodeFormGroup[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_responsive",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_firstUpdateComplete",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_currentFormGroupLayout",
              "type": {
                "text": "FormGroupLayout"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_collectFormData",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_toggleCompactLayout",
              "privacy": "private",
              "parameters": [
                {
                  "name": "layout",
                  "type": {
                    "text": "FormGroupLayout"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_resizeObserverCallback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "ResizeObserverEntry[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_resizeObserverCallbackBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_activateResponsiveLayout",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_deactivateResizeObserver",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "fieldName": "responsive"
            },
            {
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "490",
              "fieldName": "breakpoint"
            },
            {
              "name": "data",
              "type": {
                "text": "FormData"
              },
              "fieldName": "data"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-form-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormContainer",
          "declaration": {
            "name": "VscodeFormContainer",
            "module": "src/vscode-form-container/vscode-form-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-container",
          "declaration": {
            "name": "VscodeFormContainer",
            "module": "src/vscode-form-container/vscode-form-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-description/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormDescription",
          "declaration": {
            "name": "VscodeFormDescription",
            "module": "./vscode-form-description"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-description/vscode-form-description.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  css`\n    :host {\n      color: var(--vscode-foreground);\n      cursor: default;\n      display: block;\n      font-family: var(--vscode-font-family);\n      font-size: var(--vscode-font-size);\n      line-height: 1.4;\n      margin: 3px 0;\n      opacity: 0.9;\n      overflow: hidden;\n      user-select: text;\n    }\n\n    ::slotted(a),\n    ::slotted(a:visited) {\n      color: var(--vscode-textLink-foreground);\n      text-decoration: none;\n    }\n\n    ::slotted(a:hover),\n    ::slotted(a:active) {\n      color: var(--vscode-textLink-activeForeground);\n      text-decoration: underline;\n    }\n\n    ::slotted(code) {\n      color: var(--vscode-textPreformat-foreground);\n    }\n\n    ::slotted(p) {\n      line-height: 1.4;\n      margin-bottom: 9px;\n      margin-top: 9px;\n    }\n\n    ::slotted(p:first-child) {\n      margin-top: 0;\n    }\n\n    ::slotted(p:last-child) {\n      margin-bottom: 0;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-form-description/vscode-form-description.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-description/vscode-form-description.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeFormDescription",
          "members": [],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "deprecated": "true",
          "tagName": "vscode-form-description",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormDescription",
          "declaration": {
            "name": "VscodeFormDescription",
            "module": "src/vscode-form-description/vscode-form-description.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-description",
          "declaration": {
            "name": "VscodeFormDescription",
            "module": "src/vscode-form-description/vscode-form-description.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-control/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormControl",
          "declaration": {
            "name": "VscodeFormControl",
            "module": "./vscode-form-control"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-control/vscode-form-control.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  css`\n    :host {\n      display: block;\n      margin-top: 9px;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-form-control/vscode-form-control.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-control/vscode-form-control.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeFormControl",
          "members": [],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "deprecated": "true",
          "tagName": "vscode-form-control",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormControl",
          "declaration": {
            "name": "VscodeFormControl",
            "module": "src/vscode-form-control/vscode-form-control.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-control",
          "declaration": {
            "name": "VscodeFormControl",
            "module": "src/vscode-form-control/vscode-form-control.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormGroup",
          "declaration": {
            "name": "VscodeFormGroup",
            "module": "./vscode-form-group"
          }
        },
        {
          "kind": "js",
          "name": "FormGroupVariant",
          "declaration": {
            "name": "FormGroupVariant",
            "module": "./vscode-form-group"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-group/vscode-form-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeFormGroup",
          "cssProperties": [
            {
              "description": "The width of the label in horizontal mode",
              "name": "--label-width",
              "default": "150px"
            },
            {
              "description": "The right margin of the label in horizontal mode",
              "name": "--label-right-margin",
              "default": "14px"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "FormGroupVariant"
              },
              "default": "'horizontal'",
              "attribute": "variant",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "FormGroupVariant"
              },
              "default": "'horizontal'",
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-form-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormGroup",
          "declaration": {
            "name": "VscodeFormGroup",
            "module": "src/vscode-form-group/vscode-form-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-group",
          "declaration": {
            "name": "VscodeFormGroup",
            "module": "src/vscode-form-group/vscode-form-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-helper/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormHelper",
          "declaration": {
            "name": "VscodeFormHelper",
            "module": "./vscode-form-helper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-helper/vscode-form-helper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Adds more detailed description to a [FromGroup](https://bendera.github.io/vscode-webview-elements/components/vscode-form-group/)",
          "name": "VscodeFormHelper",
          "cssProperties": [
            {
              "description": "Default text color. 90% transparency version of `--vscode-foreground` by default.",
              "name": "--foreground",
              "default": "var(--vsc-foreground-translucent)"
            }
          ],
          "members": [],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-form-helper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormHelper",
          "declaration": {
            "name": "VscodeFormHelper",
            "module": "src/vscode-form-helper/vscode-form-helper.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-helper",
          "declaration": {
            "name": "VscodeFormHelper",
            "module": "src/vscode-form-helper/vscode-form-helper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-item/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormItem",
          "declaration": {
            "name": "VscodeFormItem",
            "module": "./vscode-form-item"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-item/vscode-form-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeFormItem",
          "members": [],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-form-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormItem",
          "declaration": {
            "name": "VscodeFormItem",
            "module": "src/vscode-form-item/vscode-form-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-item",
          "declaration": {
            "name": "VscodeFormItem",
            "module": "src/vscode-form-item/vscode-form-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-label/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormLabel",
          "declaration": {
            "name": "VscodeFormLabel",
            "module": "./vscode-form-label"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-form-label/vscode-form-label.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeFormLabel",
          "members": [],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-form-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeFormLabel",
          "declaration": {
            "name": "VscodeFormLabel",
            "module": "src/vscode-form-label/vscode-form-label.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-form-label",
          "declaration": {
            "name": "VscodeFormLabel",
            "module": "src/vscode-form-label/vscode-form-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-icon/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeIcon",
          "declaration": {
            "name": "VscodeIcon",
            "module": "./vscode-icon"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-icon/vscode-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Display a [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html).\nIn \"action-icon\" mode it behaves like a button. In this case, it is\nrecommended that a meaningful label is specified with the `label` property.",
          "name": "VscodeIcon",
          "cssProperties": [
            {
              "name": "--foreground",
              "default": "var(--vscode-icon-foreground)"
            },
            {
              "description": "Hover state background color in `active-icon` mode",
              "name": "--hover-background",
              "default": "var(--vscode-toolbar-hoverBackground)"
            },
            {
              "description": "Active state background color in `active-icon` mode",
              "name": "--active-background",
              "default": "var(--vscode-toolbar-activeBackground)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Set a meaningful label in `action-icon` mode for the screen readers",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "[Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) icon name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "16",
              "description": "Icon size in pixels",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "spin",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable rotation animation",
              "attribute": "spin"
            },
            {
              "kind": "field",
              "name": "spinDuration",
              "type": {
                "text": "number"
              },
              "default": "1.5",
              "description": "Animation duration in seconds",
              "attribute": "spin-duration"
            },
            {
              "kind": "field",
              "name": "actionIcon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Behaves like a button",
              "attribute": "action-icon"
            },
            {
              "kind": "field",
              "name": "stylesheetHref",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "static": true,
              "default": "''"
            },
            {
              "kind": "field",
              "name": "nonce",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "static": true,
              "default": "''"
            },
            {
              "kind": "method",
              "name": "_getStylesheetConfig",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{\n    href: string | undefined;\n    nonce: string | undefined;\n  }"
                }
              },
              "description": "For using web fonts in web components, the font stylesheet must be included\ntwice: on the page and in the web component. This function looks for the\nfont stylesheet on the page and returns the stylesheet URL and the nonce\nid."
            },
            {
              "kind": "field",
              "name": "_onButtonClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Set a meaningful label in `action-icon` mode for the screen readers",
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "[Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) icon name.",
              "fieldName": "name"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "16",
              "description": "Icon size in pixels",
              "fieldName": "size"
            },
            {
              "name": "spin",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable rotation animation",
              "fieldName": "spin"
            },
            {
              "name": "spin-duration",
              "type": {
                "text": "number"
              },
              "default": "1.5",
              "description": "Animation duration in seconds",
              "fieldName": "spinDuration"
            },
            {
              "name": "action-icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Behaves like a button",
              "fieldName": "actionIcon"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeIcon",
          "declaration": {
            "name": "VscodeIcon",
            "module": "src/vscode-icon/vscode-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-icon",
          "declaration": {
            "name": "VscodeIcon",
            "module": "src/vscode-icon/vscode-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-inputbox/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeInputbox",
          "declaration": {
            "name": "VscodeInputbox",
            "module": "./vscode-inputbox"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-inputbox/vscode-inputbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeInputbox",
          "cssProperties": [
            {
              "name": "--vscode-scrollbarSlider-background"
            },
            {
              "name": "--vscode-scrollbarSlider-hoverBackground"
            },
            {
              "name": "--vscode-scrollbarSlider-activeBackground"
            },
            {
              "name": "--vscode-input-background"
            },
            {
              "name": "--vscode-settings-textInputBorder"
            },
            {
              "name": "--vscode-input-foreground"
            },
            {
              "name": "--vscode-input-placeholderForeground"
            },
            {
              "name": "--vscode-focusBorder"
            },
            {
              "name": "--vscode-panelInput-border"
            },
            {
              "name": "--vscode-focusBorder"
            },
            {
              "name": "--vscode-inputValidation-infoBackground"
            },
            {
              "name": "--vscode-inputValidation-infoBorder"
            },
            {
              "name": "--vscode-inputValidation-warningBackground"
            },
            {
              "name": "--vscode-inputValidation-warningBorder"
            },
            {
              "name": "--vscode-inputValidation-errorBackground"
            },
            {
              "name": "--vscode-inputValidation-errorBorder"
            },
            {
              "name": "--vscode-editor-background"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "multiline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multiline"
            },
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "message"
            },
            {
              "kind": "field",
              "name": "severity",
              "type": {
                "text": "string"
              },
              "attribute": "severity"
            },
            {
              "kind": "field",
              "name": "panelInput",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "deprecated": "true",
              "attribute": "panelInput"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "\"color\"|\"date\"|\"datetime-local\"|\"email\"|\"file\"|\"month\"|\"number\"|\"password\"|\"tel\"|\"text\"|\"time\"|\"url\"|\"week\""
              },
              "default": "'text'",
              "description": "Text-like input types",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "focused",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "2",
              "attribute": "lines"
            },
            {
              "kind": "field",
              "name": "maxLines",
              "type": {
                "text": "number"
              },
              "default": "5",
              "attribute": "maxLines"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "_measurerEl",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_inputElement",
              "type": {
                "text": "HTMLInputElement | HTMLTextAreaElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_textareaHeight",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_severity",
              "type": {
                "text": "Severity"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_textareaDefaultCursor",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "focusElement",
              "type": {
                "text": "HTMLInputElement | HTMLTextAreaElement"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "onInputFocus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onInputBlur",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onInputInput",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onInputChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onTextareaMouseMove",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeTextareaIfRequired",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "panelInput",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "deprecated": "true",
              "fieldName": "panelInput",
              "attribute": "panelInput"
            },
            {
              "name": "type",
              "type": {
                "text": "\"color\"|\"date\"|\"datetime-local\"|\"email\"|\"file\"|\"month\"|\"number\"|\"password\"|\"tel\"|\"text\"|\"time\"|\"url\"|\"week\""
              },
              "default": "'text'",
              "description": "Text-like input types",
              "fieldName": "type",
              "attribute": "type"
            },
            {
              "type": {
                "text": "narrow|wide"
              },
              "description": "The sizes are borrowed from the VSCode settings page. The narrow size is typically used for the numeric values and the wide size for the text.",
              "name": "variant"
            },
            {
              "description": "Name which is used as a variable name in the data of the form-container.",
              "name": "name"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            },
            {
              "name": "multiline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiline"
            },
            {
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "message"
            },
            {
              "name": "severity",
              "type": {
                "text": "string"
              },
              "fieldName": "severity"
            },
            {
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "focused"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "placeholder"
            },
            {
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "2",
              "fieldName": "lines"
            },
            {
              "name": "maxLines",
              "type": {
                "text": "number"
              },
              "default": "5",
              "fieldName": "maxLines"
            },
            {
              "name": "min",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-inputbox/vscode-inputbox.ts"
              },
              "fieldName": "min"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-inputbox/vscode-inputbox.ts"
              },
              "fieldName": "minLength"
            },
            {
              "name": "max",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-inputbox/vscode-inputbox.ts"
              },
              "fieldName": "max"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-inputbox/vscode-inputbox.ts"
              },
              "fieldName": "maxLength"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiple"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "step",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-inputbox/vscode-inputbox.ts"
              },
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-inputbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeInputbox",
          "declaration": {
            "name": "VscodeInputbox",
            "module": "src/vscode-inputbox/vscode-inputbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-inputbox",
          "declaration": {
            "name": "VscodeInputbox",
            "module": "src/vscode-inputbox/vscode-inputbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-label/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeLabel",
          "declaration": {
            "name": "VscodeLabel",
            "module": "./vscode-label"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-label/vscode-label.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeLabel",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "htmlFor",
              "type": {
                "text": "string"
              },
              "attribute": "for",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "_id",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_htmlFor",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_connected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "_getTarget",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_connectWithTarget",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "for",
              "type": {
                "text": "string"
              },
              "fieldName": "htmlFor"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "fieldName": "id"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeLabel",
          "declaration": {
            "name": "VscodeLabel",
            "module": "src/vscode-label/vscode-label.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-label",
          "declaration": {
            "name": "VscodeLabel",
            "module": "src/vscode-label/vscode-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-multi-select/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeMultiSelect",
          "declaration": {
            "name": "VscodeMultiSelect",
            "module": "./vscode-multi-select"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-multi-select/vscode-multi-select.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeMultiSelect",
          "cssProperties": [
            {
              "name": "--dropdown-z-index",
              "default": "2"
            },
            {
              "name": "--badge-background",
              "default": "var(--vscode-badge-background)"
            },
            {
              "name": "--badge-foreground",
              "default": "var(--vscode-badge-foreground)"
            },
            {
              "name": "--border",
              "default": "var(--vscode-settings-dropdownBorder)"
            },
            {
              "name": "--checkbox-background",
              "default": "var(--vscode-settings-checkboxBackground)"
            },
            {
              "name": "--dropdown-background",
              "default": "var(--vscode-settings-dropdownBackground)"
            },
            {
              "name": "--dropdown-border",
              "default": "var(--vscode-settings-dropdownListBorder)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--list-active-selection-background",
              "default": "var(--vscode-list-activeSelectionBackground)"
            },
            {
              "name": "--list-active-selection-foreground",
              "default": "var(--vscode-list-activeSelectionForeground)"
            },
            {
              "name": "--list-focus-outline",
              "default": "var(--vscode-list-focusOutline)"
            },
            {
              "name": "--list-hover-background",
              "default": "var(--vscode-list-hoverBackground)"
            },
            {
              "name": "--list-hover-foreground",
              "default": "var(--vscode-list-hoverForeground)"
            },
            {
              "name": "--selected-background",
              "default": "var(--vscode-list-hoverBackground)"
            },
            {
              "name": "--input-background",
              "default": "var(--vscode-settings-textInputBackground)"
            },
            {
              "name": "--list-hover-background",
              "default": "var(--vscode-list-hoverBackground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "selectedIndexes",
              "type": {
                "text": "number[]"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string[]"
              },
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "_onOptionClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onMultiAcceptClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onMultiDeselectAllClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onMultiSelectAllClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_renderLabel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_renderSelectFace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_renderComboboxFace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_renderOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_renderDropdownControls",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "_multiple",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            }
          ],
          "attributes": [
            {
              "description": "Name which is used as a variable name in the data of the form-container.",
              "name": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string[]"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "VscodeSelectBase",
            "module": "/src/includes/vscode-select/vscode-select-base"
          },
          "tagName": "vscode-multi-select",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeMultiSelect",
          "declaration": {
            "name": "VscodeMultiSelect",
            "module": "src/vscode-multi-select/vscode-multi-select.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-multi-select",
          "declaration": {
            "name": "VscodeMultiSelect",
            "module": "src/vscode-multi-select/vscode-multi-select.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-option/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeOption",
          "declaration": {
            "name": "VscodeOption",
            "module": "./vscode-option"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-option/vscode-option.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeOption",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "description"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-option",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeOption",
          "declaration": {
            "name": "VscodeOption",
            "module": "src/vscode-option/vscode-option.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-option",
          "declaration": {
            "name": "VscodeOption",
            "module": "src/vscode-option/vscode-option.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-radio/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeRadio",
          "declaration": {
            "name": "VscodeRadio",
            "module": "./vscode-radio"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-radio/vscode-radio.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  defaultStyles,\n  baseStyles,\n  css`\n    .icon {\n      border-radius: 9px;\n    }\n\n    .icon.checked:before {\n      background-color: currentColor;\n      border-radius: 4px;\n      content: '';\n      height: 8px;\n      left: 50%;\n      margin: -4px 0 0 -4px;\n      position: absolute;\n      top: 50%;\n      width: 8px;\n    }\n\n    :host(:focus):host(:not([disabled])) .icon {\n      outline: 1px solid var(--focus-border);\n      outline-offset: -1px;\n    }\n  `,\n  formHelperTextStyles,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-radio/vscode-radio.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-radio/vscode-radio.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeRadio",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "description": "Label font color. 90% transparency version of `--vscode-foreground` by default.",
              "name": "--foreground",
              "default": "var(--vsc-foreground-translucent)"
            },
            {
              "name": "--icon-background",
              "default": "var(--vscode-settings-checkboxBackground)"
            },
            {
              "name": "--icon-border",
              "default": "var(--vscode-settings-checkboxBorder)"
            },
            {
              "name": "--icon-foreground",
              "default": "var(--vscode-settings-checkboxForeground)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Name which is used as a variable name in the data of the form-container.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'radio'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_checked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_slottedText",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "_dispatchCustomEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_checkButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_handleKeyDown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "description": "Label text. It is only applied if componnet's innerHTML doesn't contain any text.",
              "name": "label",
              "kind": "field"
            }
          ],
          "events": [
            {
              "name": "vsc-change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "description": "Name which is used as a variable name in the data of the form-container.",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "description": "Attribute pair of the `label` property.",
              "name": "label"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "fieldName": "checked"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'radio'",
              "fieldName": "role"
            }
          ],
          "mixins": [
            {
              "name": "LabelledCheckboxOrRadioMixin",
              "module": "/src/includes/form-button-widget/LabelledCheckboxOrRadio"
            }
          ],
          "superclass": {
            "name": "FormButtonWidgetBase",
            "module": "/src/includes/form-button-widget/FormButtonWidgetBase"
          },
          "tagName": "vscode-radio",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeRadio",
          "declaration": {
            "name": "VscodeRadio",
            "module": "src/vscode-radio/vscode-radio.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-radio",
          "declaration": {
            "name": "VscodeRadio",
            "module": "src/vscode-radio/vscode-radio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-radio-group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeRadioGroup",
          "declaration": {
            "name": "VscodeRadioGroup",
            "module": "./vscode-radio-group"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-radio-group/vscode-radio-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeRadioGroup",
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "inline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'radiogroup'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_radios",
              "type": {
                "text": "VscodeRadio[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_focusedRadio",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_checkedRadio",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "-1"
            },
            {
              "kind": "method",
              "name": "_beforeCheck",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_afterCheck",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_checkPrev",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_checkNext",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onKeyDownBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSlotChange",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'",
              "fieldName": "variant"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "inline"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'radiogroup'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-radio-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeRadioGroup",
          "declaration": {
            "name": "VscodeRadioGroup",
            "module": "src/vscode-radio-group/vscode-radio-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-radio-group",
          "declaration": {
            "name": "VscodeRadioGroup",
            "module": "src/vscode-radio-group/vscode-radio-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-scrollable/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeScrollable",
          "declaration": {
            "name": "VscodeScrollable",
            "module": "./vscode-scrollable"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-scrollable/vscode-scrollable.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeScrollable",
          "cssProperties": [
            {
              "name": "--min-thumb-height",
              "default": "20px"
            },
            {
              "name": "--scrollbar-shadow",
              "default": "var(--vscode-scrollbar-shadow)"
            },
            {
              "name": "--scrollbar-slider-background",
              "default": "var(--vscode-scrollbarSlider-background)"
            },
            {
              "name": "--scrollbar-slider-hover-background",
              "default": "var(--vscode-scrollbarSlider-hoverBackground)"
            },
            {
              "name": "--scrollbar-slider-active-background",
              "default": "var(--vscode-scrollbarSlider-activeBackground')"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadow",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "shadow",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "scrolled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "scrolled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "scrollPos",
              "type": {
                "text": "number"
              },
              "attribute": "scroll-pos"
            },
            {
              "kind": "field",
              "name": "scrollMax",
              "type": {
                "text": "number"
              },
              "attribute": "scroll-max"
            },
            {
              "kind": "field",
              "name": "_isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_thumbHeight",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_thumbY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_thumbVisible",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_thumbFade",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_thumbActive",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_contentElement",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_scrollThumbElement",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_scrollableContainer",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_assignedNodes",
              "type": {
                "text": "NodeList"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_resizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_scrollThumbStartY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_mouseStartY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_scrollbarVisible",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "_scrollbarTrackZ",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "_resizeObserverCallback",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_resizeObserverCallbackBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateScrollbar",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_zIndexFix",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onScrollThumbMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onScrollThumbMouseMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onScrollThumbMouseMoveBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onScrollThumbMouseUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onScrollThumbMouseUpBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onScrollableContainerScroll",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onComponentMouseOver",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onComponentMouseOverBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onComponentMouseOut",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onComponentMouseOutBound",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "shadow",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "shadow"
            },
            {
              "name": "scrolled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "scrolled"
            },
            {
              "name": "scroll-pos",
              "type": {
                "text": "number"
              },
              "fieldName": "scrollPos"
            },
            {
              "name": "scroll-max",
              "type": {
                "text": "number"
              },
              "fieldName": "scrollMax"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-scrollable",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeScrollable",
          "declaration": {
            "name": "VscodeScrollable",
            "module": "src/vscode-scrollable/vscode-scrollable.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-scrollable",
          "declaration": {
            "name": "VscodeScrollable",
            "module": "src/vscode-scrollable/vscode-scrollable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-single-select/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeSingleSelect",
          "declaration": {
            "name": "VscodeSingleSelect",
            "module": "./vscode-single-select"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-single-select/vscode-single-select.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "## Types\n\n```typescript\ninterface Option {\n label: string;\n value: string;\n description: string;\n selected: boolean;\n disabled: boolean;\n}\n```",
          "name": "VscodeSingleSelect",
          "cssProperties": [
            {
              "name": "--dropdown-z-index",
              "default": "2"
            },
            {
              "name": "--badge-background",
              "default": "var(--vscode-badge-background)"
            },
            {
              "name": "--badge-foreground",
              "default": "var(--vscode-badge-foreground)"
            },
            {
              "name": "--border",
              "default": "var(--vscode-settings-dropdownBorder)"
            },
            {
              "name": "--checkbox-background",
              "default": "var(--vscode-settings-checkboxBackground)"
            },
            {
              "name": "--dropdown-background",
              "default": "var(--vscode-settings-dropdownBackground)"
            },
            {
              "name": "--dropdown-border",
              "default": "var(--vscode-settings-dropdownListBorder)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--list-active-selection-background",
              "default": "var(--vscode-list-activeSelectionBackground)"
            },
            {
              "name": "--list-active-selection-foreground",
              "default": "var(--vscode-list-activeSelectionForeground)"
            },
            {
              "name": "--list-focus-outline",
              "default": "var(--vscode-list-focusOutline)"
            },
            {
              "name": "--list-hover-background",
              "default": "var(--vscode-list-hoverBackground)"
            },
            {
              "name": "--list-hover-foreground",
              "default": "var(--vscode-list-hoverForeground)"
            },
            {
              "name": "--selected-background",
              "default": "var(--vscode-list-hoverBackground)"
            },
            {
              "name": "--input-background",
              "default": "var(--vscode-settings-textInputBackground)"
            },
            {
              "name": "--list-hover-background",
              "default": "var(--vscode-list-hoverBackground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'listbox'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectedIndex",
              "type": {
                "text": "number"
              },
              "attribute": "selected-index"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "_labelText",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "updateInputValue",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onSlotChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onArrowUpKeyDown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onArrowDownKeyDown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onEnterKeyDown",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onOptionClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_renderLabel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_renderSelectFace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_renderComboboxFace",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_renderOptions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "_multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            }
          ],
          "attributes": [
            {
              "description": "Name which is used as a variable name in the data of the form-container.",
              "name": "name"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'listbox'",
              "fieldName": "role"
            },
            {
              "name": "selected-index",
              "type": {
                "text": "number"
              },
              "fieldName": "selectedIndex"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "VscodeSelectBase",
            "module": "/src/includes/vscode-select/vscode-select-base"
          },
          "tagName": "vscode-single-select",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeSingleSelect",
          "declaration": {
            "name": "VscodeSingleSelect",
            "module": "src/vscode-single-select/vscode-single-select.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-single-select",
          "declaration": {
            "name": "VscodeSingleSelect",
            "module": "src/vscode-single-select/vscode-single-select.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-split-layout/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeSplitLayout",
          "declaration": {
            "name": "VscodeSplitLayout",
            "module": "./vscode-split-layout"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-split-layout/vscode-split-layout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeSplitLayout",
          "cssProperties": [
            {
              "name": "--hover-border",
              "default": "var(--vscode-sash-hoverBorder)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "split",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'vertical'",
              "attribute": "split"
            },
            {
              "kind": "field",
              "name": "resetOnDblClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "reset-on-dbl-click"
            },
            {
              "kind": "field",
              "name": "initialPos",
              "type": {
                "text": "string"
              },
              "default": "'50%'",
              "attribute": "initial-pos"
            },
            {
              "kind": "field",
              "name": "_startPaneRight",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_startPaneBottom",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_endPaneTop",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_endPaneLeft",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_handleLeft",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_handleTop",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_isDragActive",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_hover",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_hide",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_boundRect",
              "type": {
                "text": "DOMRect"
              },
              "privacy": "private",
              "default": "new DOMRect()"
            },
            {
              "kind": "field",
              "name": "_handleOffset",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "_initPosition",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleMouseOver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleMouseOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleMouseUp",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleMouseUpBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleMouseMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_handleMouseMoveBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleDblClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "split",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'vertical'",
              "fieldName": "split"
            },
            {
              "name": "reset-on-dbl-click",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resetOnDblClick"
            },
            {
              "name": "initial-pos",
              "type": {
                "text": "string"
              },
              "default": "'50%'",
              "fieldName": "initialPos"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-split-layout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeSplitLayout",
          "declaration": {
            "name": "VscodeSplitLayout",
            "module": "src/vscode-split-layout/vscode-split-layout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-split-layout",
          "declaration": {
            "name": "VscodeSplitLayout",
            "module": "src/vscode-split-layout/vscode-split-layout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tab-header/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTabHeader",
          "declaration": {
            "name": "VscodeTabHeader",
            "module": "./vscode-tab-header"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tab-header/vscode-tab-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTabHeader",
          "cssProperties": [
            {
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            },
            {
              "name": "--panel-inactive-foreground",
              "default": "var(--vscode-panelTitle-inactiveForeground)"
            },
            {
              "name": "--panel-active-foreground",
              "default": "var(--vscode-panelTitle-activeForeground)"
            },
            {
              "name": "--panel-active-border",
              "default": "var(--vscode-panelTitle-activeBorder)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            },
            {
              "name": "--active-foreground",
              "default": "var(--vscode-settings-headerForeground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ariaControls",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "aria-controls",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "panel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel-like look",
              "attribute": "panel",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'tab'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabId",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "tab-id",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "aria-controls",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "ariaControls"
            },
            {
              "name": "panel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel-like look",
              "fieldName": "panel"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'tab'",
              "fieldName": "role"
            },
            {
              "name": "tab-id",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "tabId"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-tab-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTabHeader",
          "declaration": {
            "name": "VscodeTabHeader",
            "module": "src/vscode-tab-header/vscode-tab-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-tab-header",
          "declaration": {
            "name": "VscodeTabHeader",
            "module": "src/vscode-tab-header/vscode-tab-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tab-panel/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTabPanel",
          "declaration": {
            "name": "VscodeTabPanel",
            "module": "./vscode-tab-panel"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tab-panel/vscode-tab-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTabPanel",
          "cssProperties": [
            {
              "name": "--background",
              "default": "var(--vscode-panel--background)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hidden",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ariaLabelledby",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "aria-labelledby",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "panel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel-like look",
              "attribute": "panel",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'tabpanel'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hidden"
            },
            {
              "name": "aria-labelledby",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "ariaLabelledby"
            },
            {
              "name": "panel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel-like look",
              "fieldName": "panel"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'tabpanel'",
              "fieldName": "role"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabindex"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTabPanel",
          "declaration": {
            "name": "VscodeTabPanel",
            "module": "src/vscode-tab-panel/vscode-tab-panel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-tab-panel",
          "declaration": {
            "name": "VscodeTabPanel",
            "module": "src/vscode-tab-panel/vscode-tab-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-body/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableBody",
          "declaration": {
            "name": "VscodeTableBody",
            "module": "./vscode-table-body"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-body/vscode-table-body.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTableBody",
          "cssProperties": [
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--tinted-row-background",
              "default": "var(--vscode-keybindingTable-rowsBackground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'rowgroup'",
              "attribute": "role",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'rowgroup'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-table-body",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableBody",
          "declaration": {
            "name": "VscodeTableBody",
            "module": "src/vscode-table-body/vscode-table-body.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-table-body",
          "declaration": {
            "name": "VscodeTableBody",
            "module": "src/vscode-table-body/vscode-table-body.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table/helpers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "rawValueToPercentage",
          "return": {
            "type": {
              "text": "number | null"
            }
          },
          "parameters": [
            {
              "name": "raw",
              "type": {
                "text": "string | number"
              }
            },
            {
              "name": "base",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rawValueToPercentage",
          "declaration": {
            "name": "rawValueToPercentage",
            "module": "src/vscode-table/helpers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTable",
          "declaration": {
            "name": "VscodeTable",
            "module": "./vscode-table"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table/vscode-table.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResultGroup"
          },
          "default": "[\n  baseStyles,\n  declareThemeVariables([\n    {\n      componentProp: '--border',\n      vscodeProp: '--vscode-editorGroup-border',\n    },\n    {\n      componentProp: '--foreground',\n      vscodeProp: '--vscode-foreground',\n    },\n    {\n      componentProp: '--resize-hover-border',\n      vscodeProp: '--vscode-sash-hoverBorder',\n    },\n    {\n      componentProp: '--tinted-row-background',\n      vscodeProp: '--vscode-keybindingTable-rowsBackground',\n    },\n    {\n      componentProp: '--header-background',\n      vscodeProp: '--vscode-keybindingTable-headerBackground',\n    },\n    {\n      componentProp: '--font-size',\n      vscodeProp: '--vscode-font-size',\n    },\n    {\n      componentProp: 'font-family',\n      vscodeProp: '--vscode-font-family',\n    },\n  ]),\n  css`\n    :host {\n      display: block;\n    }\n\n    ::slotted(vscode-table-row) {\n      width: 100%;\n    }\n\n    .wrapper {\n      height: 100%;\n      max-width: 100%;\n      overflow: hidden;\n      position: relative;\n      width: 100%;\n    }\n\n    .wrapper.select-disabled {\n      user-select: none;\n    }\n\n    .wrapper.resize-cursor {\n      cursor: ew-resize;\n    }\n\n    .wrapper.compact-view .header-slot-wrapper {\n      height: 0;\n      overflow: hidden;\n    }\n\n    .scrollable {\n      height: 100%;\n    }\n\n    .scrollable:before {\n      background-color: transparent;\n      content: '';\n      display: block;\n      height: 1px;\n      position: absolute;\n      width: 100%;\n    }\n\n    :host(:not([bordered]))\n      .wrapper:not(.compact-view):hover\n      .scrollable:not([scrolled]):before,\n    :host([bordered])\n      .wrapper:not(.compact-view)\n      .scrollable:not([scrolled]):before {\n      background-color: var(--border);\n    }\n\n    :host(:not([bordered])) .sash {\n      visibility: hidden;\n    }\n\n    :host(:not([compact])) .wrapper:hover .sash {\n      visibility: visible;\n    }\n\n    .sash {\n      height: 100%;\n      position: absolute;\n      top: 0;\n      width: 1px;\n    }\n\n    .wrapper.compact-view .sash {\n      display: none;\n    }\n\n    .sash.resizable {\n      cursor: ew-resize;\n    }\n\n    .sash-visible {\n      background-color: var(--border);\n      height: 100%;\n      position: absolute;\n      top: 0;\n      width: 1px;\n    }\n\n    .sash.hover .sash-visible {\n      background-color: var(--resize-hover-border);\n      transition: background-color 50ms linear 300ms;\n    }\n\n    .sash .sash-clickable {\n      background-color: transparent;\n      height: 100%;\n      left: -2px;\n      position: absolute;\n      width: 5px;\n    }\n  `,\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "styles",
            "module": "src/vscode-table/vscode-table.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table/vscode-table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTable",
          "cssProperties": [
            {
              "name": "--border",
              "default": "var(--vscode-editorGroup-border)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            },
            {
              "name": "--resize-hover-border",
              "default": "var(--vscode-sash-hoverBorder)"
            },
            {
              "name": "--tinted-row-background",
              "default": "var(--vscode-keybindingTable-rowsBackground)"
            },
            {
              "name": "--header-background",
              "default": "var(--vscode-keybindingTable-headerBackground)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'table'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "resizable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "resizable"
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "responsive",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "300",
              "attribute": "breakpoint"
            },
            {
              "kind": "field",
              "name": "columns",
              "description": "Initial column sizes in a JSON-encoded array.\nAccepted values are:\n- number\n- string-type number (ex.: \"100\")\n- px value (ex.: \"100px\")\n- percentage value (ex.: \"50%\")\n- percentage value (ex.: \"50%\")\n- \"auto\" keyword",
              "type": {
                "text": "string[]"
              },
              "attribute": "columns"
            },
            {
              "kind": "field",
              "name": "minColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'50px'",
              "description": "Minimum column width. Valid values are:\n- number\n- string-type number (ex.: \"100\")\n- px value (ex.: \"100px\")\n- percentage value (ex.: \"50%\")\n- percentage value (ex.: \"50%\")\n- \"auto\" keyword",
              "attribute": "min-column-width"
            },
            {
              "kind": "field",
              "name": "delayedResizing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "delayed-resizing"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "For internal use only",
              "attribute": "compact",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_bodySlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_headerElement",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_scrollableElement",
              "type": {
                "text": "VscodeScrollable"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_sashVisibleElements",
              "type": {
                "text": "HTMLDivElement[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_assignedHeaderElements",
              "type": {
                "text": "NodeListOf<VscodeTableHeader>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_assignedBodyElements",
              "type": {
                "text": "NodeListOf<VscodeTableBody>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_sashPositions",
              "type": {
                "text": "number[]"
              },
              "privacy": "private",
              "default": "[]",
              "description": "Sash positions in percentage"
            },
            {
              "kind": "field",
              "name": "_isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_sashHovers",
              "type": {
                "text": "boolean[]"
              },
              "privacy": "private",
              "default": "[]",
              "description": "Sash hover state flags, used in the render."
            },
            {
              "kind": "field",
              "name": "_columns",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_componentResizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_headerResizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_activeSashElementIndex",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "_activeSashCursorOffset",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_componentX",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_componentH",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_componentW",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_headerCells",
              "type": {
                "text": "VscodeTableHeaderCell[]"
              },
              "privacy": "private",
              "default": "[]",
              "description": "Cached querySelectorAll result. Updated when the header slot changes.\nIt shouldn't be used directly, check the \"_getHeaderCells\" function."
            },
            {
              "kind": "field",
              "name": "_cellsOfFirstRow",
              "type": {
                "text": "VscodeTableCell[]"
              },
              "privacy": "private",
              "default": "[]",
              "description": "Cached querySelectorAll result. Updated when the body slot changes.\nIt shouldn't be used directly, check the \"_getCellsOfFirstRow\" function."
            },
            {
              "kind": "field",
              "name": "_cellsToResize",
              "type": {
                "text": "VscodeTableCell[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_headerCellsToResize",
              "type": {
                "text": "VscodeTableHeaderCell[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_prevHeaderHeight",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_prevComponentHeight",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "_px2Percent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "px",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_percent2Px",
              "privacy": "private",
              "parameters": [
                {
                  "name": "percent",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_memoizeComponentDimensions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_queryHeaderCells",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_getHeaderCells",
              "privacy": "private",
              "description": "Get cached header cells"
            },
            {
              "kind": "method",
              "name": "_queryCellsOfFirstRow",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_getCellsOfFirstRow",
              "privacy": "private",
              "description": "Get cached cells of first row"
            },
            {
              "kind": "method",
              "name": "_initResizeObserver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_componentResizeObserverCallback",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_componentResizeObserverCallbackBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_headerResizeObserverCallback",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_headerResizeObserverCallbackBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_calcColWidthPercentages",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_initHeaderCellSizes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "colWidths",
                  "type": {
                    "text": "number[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_initBodyColumnSizes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "colWidths",
                  "type": {
                    "text": "number[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_initSashes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "colWidths",
                  "type": {
                    "text": "number[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_initDefaultColumnSizes",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateScrollpaneSize",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_applyCompactViewColumnLabels",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_clearCompactViewColumnLabels",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_toggleCompactView",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onHeaderSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onBodySlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onSashMouseOver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSashMouseOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onSashMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateActiveSashPosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "mouseX",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSashPositions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{\n    sashPos: number;\n    prevSashPos: number;\n    nextSashPos: number;\n  }"
                }
              }
            },
            {
              "kind": "method",
              "name": "_resizeColumns",
              "privacy": "private",
              "parameters": [
                {
                  "name": "resizeBodyCells",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onResizingMouseMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onResizingMouseMoveBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onResizingMouseUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onResizingMouseUpBound",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "Boolean"
              },
              "description": "Zebra stripes, even rows are tinted.",
              "name": "zebra"
            },
            {
              "type": {
                "text": "Boolean"
              },
              "description": "Zebra stripes, odd rows are tinted.",
              "name": "zebra-odd"
            },
            {
              "type": {
                "text": "Boolean"
              },
              "name": "bordered"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'table'",
              "fieldName": "role"
            },
            {
              "name": "resizable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resizable"
            },
            {
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "responsive"
            },
            {
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "300",
              "fieldName": "breakpoint"
            },
            {
              "name": "columns",
              "description": "Initial column sizes in a JSON-encoded array.\nAccepted values are:\n- number\n- string-type number (ex.: \"100\")\n- px value (ex.: \"100px\")\n- percentage value (ex.: \"50%\")\n- percentage value (ex.: \"50%\")\n- \"auto\" keyword",
              "type": {
                "text": "string[]"
              },
              "fieldName": "columns"
            },
            {
              "name": "min-column-width",
              "type": {
                "text": "string"
              },
              "default": "'50px'",
              "description": "Minimum column width. Valid values are:\n- number\n- string-type number (ex.: \"100\")\n- px value (ex.: \"100px\")\n- percentage value (ex.: \"50%\")\n- percentage value (ex.: \"50%\")\n- \"auto\" keyword",
              "fieldName": "minColumnWidth"
            },
            {
              "name": "delayed-resizing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "delayedResizing"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "For internal use only",
              "fieldName": "compact"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTable",
          "declaration": {
            "name": "VscodeTable",
            "module": "src/vscode-table/vscode-table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-table",
          "declaration": {
            "name": "VscodeTable",
            "module": "src/vscode-table/vscode-table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-cell/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableCell",
          "declaration": {
            "name": "VscodeTableCell",
            "module": "./vscode-table-cell"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-cell/vscode-table-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTableCell",
          "cssProperties": [
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--border",
              "default": "var(--vscode-editorGroup-border)"
            },
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            },
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'cell'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "columnLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Cell label in the compact view of the responsive mode. For internal use only.",
              "attribute": "column-label"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable compact view in the responsive mode. For internal use only.",
              "attribute": "compact",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'cell'",
              "fieldName": "role"
            },
            {
              "name": "column-label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Cell label in the compact view of the responsive mode. For internal use only.",
              "fieldName": "columnLabel"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable compact view in the responsive mode. For internal use only.",
              "fieldName": "compact"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-table-cell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableCell",
          "declaration": {
            "name": "VscodeTableCell",
            "module": "src/vscode-table-cell/vscode-table-cell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-table-cell",
          "declaration": {
            "name": "VscodeTableCell",
            "module": "src/vscode-table-cell/vscode-table-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-header/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableHeader",
          "declaration": {
            "name": "VscodeTableHeader",
            "module": "./vscode-table-header"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-header/vscode-table-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTableHeader",
          "cssProperties": [
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--header-background",
              "default": "var(--vscode-keybindingTable-headerBackground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'rowgroup'",
              "attribute": "role",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'rowgroup'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-table-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableHeader",
          "declaration": {
            "name": "VscodeTableHeader",
            "module": "src/vscode-table-header/vscode-table-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-table-header",
          "declaration": {
            "name": "VscodeTableHeader",
            "module": "src/vscode-table-header/vscode-table-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-header-cell/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableHeaderCell",
          "declaration": {
            "name": "VscodeTableHeaderCell",
            "module": "./vscode-table-header-cell"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-header-cell/vscode-table-header-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTableHeaderCell",
          "cssProperties": [
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--foreground",
              "default": "var(--vscode-foreground)"
            },
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'columnheader'",
              "attribute": "role",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'columnheader'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-table-header-cell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableHeaderCell",
          "declaration": {
            "name": "VscodeTableHeaderCell",
            "module": "src/vscode-table-header-cell/vscode-table-header-cell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-table-header-cell",
          "declaration": {
            "name": "VscodeTableHeaderCell",
            "module": "src/vscode-table-header-cell/vscode-table-header-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-row/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableRow",
          "declaration": {
            "name": "VscodeTableRow",
            "module": "./vscode-table-row"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-table-row/vscode-table-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTableRow",
          "cssProperties": [
            {
              "description": "Inherited from [Table](/components/vscode-table/api/)",
              "name": "--border",
              "default": "var(--vscode-editorGroup-border)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'row'",
              "attribute": "role",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'row'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-table-row",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTableRow",
          "declaration": {
            "name": "VscodeTableRow",
            "module": "src/vscode-table-row/vscode-table-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-table-row",
          "declaration": {
            "name": "VscodeTableRow",
            "module": "src/vscode-table-row/vscode-table-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tabs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTabs",
          "declaration": {
            "name": "VscodeTabs",
            "module": "./vscode-tabs"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tabs/vscode-tabs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTabs",
          "cssProperties": [
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--header-border",
              "default": "var(--vscode-settings-headerBorder)"
            },
            {
              "name": "--panel-background",
              "default": "var(--vscode-panel-background)"
            }
          ],
          "slots": [
            {
              "description": "Default slot. It is used for tab panels.",
              "name": ""
            },
            {
              "description": "Slot for tab headers.",
              "name": "header"
            },
            {
              "description": "Right aligned area in the header.",
              "name": "addons"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "panel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel-like look",
              "attribute": "panel",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'tablist'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectedIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "selected-index",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_headerSlotElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_mainSlotElements",
              "type": {
                "text": "Element[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_tabHeaders",
              "type": {
                "text": "VscodeTabHeader[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_tabPanels",
              "type": {
                "text": "VscodeTabPanel[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_componentId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_tabFocus",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "_dispatchSelectEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_setActiveTab",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_focusPrevTab",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_focusNextTab",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onHeaderKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_moveHeadersToHeaderSlot",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onMainSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onHeaderSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onHeaderClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "vsc-select",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "panel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel-like look",
              "fieldName": "panel"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'tablist'",
              "fieldName": "role"
            },
            {
              "name": "selected-index",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "selectedIndex"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTabs",
          "declaration": {
            "name": "VscodeTabs",
            "module": "src/vscode-tabs/vscode-tabs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-tabs",
          "declaration": {
            "name": "VscodeTabs",
            "module": "src/vscode-tabs/vscode-tabs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-textarea/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTextarea",
          "declaration": {
            "name": "VscodeTextarea",
            "module": "./vscode-textarea"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-textarea/vscode-textarea.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Multi-line text input.",
          "name": "VscodeTextarea",
          "cssProperties": [
            {
              "name": "--scrollbar-shadow",
              "default": "var(--vscode-scrollbar-shadow)"
            },
            {
              "name": "--background",
              "default": "var(--vscode-settings-textInputBackground)"
            },
            {
              "name": "--border",
              "default": "var(--vscode-settings-textInputBorder)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-settings-textInputForeground)"
            },
            {
              "name": "--placeholder",
              "default": "var(--vscode-input-placeholderForeground)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--monospace-background",
              "default": "var(--vscode-editor-background)"
            },
            {
              "name": "--monospace-foreground",
              "default": "var(--vscode-editor-foreground)"
            },
            {
              "name": "--monospace-font-family",
              "default": "var(--vscode-editor-font-family)"
            },
            {
              "name": "--monospace-font-size",
              "default": "var(--vscode-editor-font-size)"
            },
            {
              "name": "--monospace-font-weight",
              "default": "var(--vscode-editor-font-weight)"
            },
            {
              "name": "--monospace-placeholder",
              "default": "var(--vscode-editor-inlineValuesForeground)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            },
            {
              "name": "--scrollbar-background",
              "default": "var(--vscode-scrollbarSlider-background)"
            },
            {
              "name": "--scrollbar-hover",
              "default": "var(--vscode-scrollbarSlider-hoverBackground)"
            },
            {
              "name": "--scrollbar-active",
              "default": "var(--vscode-scrollbarSlider-activeBackground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "'on' | 'off' | undefined"
              },
              "default": "undefined",
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "maxlength",
              "default": "undefined",
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "minlength",
              "default": "undefined",
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "rows",
              "default": "undefined",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "cols",
              "default": "undefined",
              "attribute": "cols"
            },
            {
              "kind": "field",
              "name": "name",
              "default": "undefined",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "default": "undefined",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "resize",
              "type": {
                "text": "'both' | 'horizontal' | 'vertical' | 'none'"
              },
              "default": "'none'",
              "attribute": "resize"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "spellcheck"
            },
            {
              "kind": "field",
              "name": "monospace",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use monospace fonts. The font family, weight, size, and color will be the same as set in the\nVSCode code editor.",
              "attribute": "monospace",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "wrappedElement",
              "type": {
                "text": "HTMLTextAreaElement"
              },
              "description": "Getter for the inner textarea element if it needs to be accessed for some reason."
            },
            {
              "kind": "method",
              "name": "focus"
            },
            {
              "kind": "field",
              "name": "_textareaEl",
              "type": {
                "text": "HTMLTextAreaElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_textareaPointerCursor",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_shadow",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "_handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleMouseMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleScroll",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "vsc-change",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "vsc-input",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "autocomplete",
              "type": {
                "text": "'on' | 'off' | undefined"
              },
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "autocomplete"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "maxlength",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "maxlength"
            },
            {
              "name": "minlength",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "minlength"
            },
            {
              "name": "rows",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "rows"
            },
            {
              "name": "cols",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "cols"
            },
            {
              "name": "name",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "name"
            },
            {
              "name": "placeholder",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textarea/vscode-textarea.ts"
              },
              "fieldName": "placeholder"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "resize",
              "type": {
                "text": "'both' | 'horizontal' | 'vertical' | 'none'"
              },
              "default": "'none'",
              "fieldName": "resize"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "spellcheck"
            },
            {
              "name": "monospace",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use monospace fonts. The font family, weight, size, and color will be the same as set in the\nVSCode code editor.",
              "fieldName": "monospace"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-textarea",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTextarea",
          "declaration": {
            "name": "VscodeTextarea",
            "module": "src/vscode-textarea/vscode-textarea.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-textarea",
          "declaration": {
            "name": "VscodeTextarea",
            "module": "src/vscode-textarea/vscode-textarea.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-textfield/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTextfield",
          "declaration": {
            "name": "VscodeTextfield",
            "module": "./vscode-textfield"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-textfield/vscode-textfield.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A simple inline textfield",
          "name": "VscodeTextfield",
          "cssProperties": [
            {
              "name": "--background",
              "default": "var(--vscode-settings-textInputBackground)"
            },
            {
              "name": "--border",
              "default": "var(--vscode-settings-textInputBorder)"
            },
            {
              "name": "--foreground",
              "default": "var(--vscode-settings-textInputForeground)"
            },
            {
              "name": "--focus-border",
              "default": "var(--vscode-focusBorder)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--placeholder",
              "default": "var(--vscode-input-placeholderForeground)"
            },
            {
              "name": "--button-background",
              "default": "var(--vscode-button-background)"
            },
            {
              "name": "--button-foreground",
              "default": "var(--vscode-button-foreground)"
            },
            {
              "name": "--button-hover",
              "default": "var(--vscode-button-hoverBackground)"
            }
          ],
          "slots": [
            {
              "name": "content-before"
            },
            {
              "name": "content-after"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autocomplete",
              "default": "undefined",
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "focused",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "invalid",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Set `aria-label` for the inner input element. Should not be set,\nvscode-label will do it automatically."
            },
            {
              "kind": "field",
              "name": "max",
              "default": "undefined",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "maxlength",
              "default": "undefined",
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "min",
              "default": "undefined",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "minlength",
              "default": "undefined",
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "name",
              "default": "undefined",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "pattern",
              "default": "undefined",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "default": "undefined",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "step",
              "default": "undefined",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "| 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'"
              },
              "default": "'text'",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "wrappedElement",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "_inputEl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onBlur",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "vsc-invalid",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "vsc-input",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "vsc-change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "autocomplete",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "autocomplete"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "focused"
            },
            {
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "invalid"
            },
            {
              "name": "max",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "max"
            },
            {
              "name": "maxlength",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "maxlength"
            },
            {
              "name": "min",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "min"
            },
            {
              "name": "minlength",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "minlength"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiple"
            },
            {
              "name": "name",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "name"
            },
            {
              "name": "pattern",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "pattern"
            },
            {
              "name": "placeholder",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "placeholder"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "step",
              "default": "undefined",
              "resolveInitializer": {
                "module": "src/vscode-textfield/vscode-textfield.ts"
              },
              "fieldName": "step"
            },
            {
              "name": "type",
              "type": {
                "text": "| 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'"
              },
              "default": "'text'",
              "fieldName": "type"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-textfield",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTextfield",
          "declaration": {
            "name": "VscodeTextfield",
            "module": "src/vscode-textfield/vscode-textfield.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-textfield",
          "declaration": {
            "name": "VscodeTextfield",
            "module": "src/vscode-textfield/vscode-textfield.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tree/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTree",
          "declaration": {
            "name": "VscodeTree",
            "module": "./vscode-tree"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/vscode-tree/vscode-tree.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VscodeTree",
          "cssProperties": [
            {
              "name": "--focus-border",
              "default": "var(--vscode-list-focusOutline)"
            },
            {
              "name": "--font-family",
              "default": "var(--vscode-font-family)"
            },
            {
              "name": "--font-size",
              "default": "var(--vscode-font-size)"
            },
            {
              "name": "--font-weight",
              "default": "var(--vscode-font-weight)"
            },
            {
              "name": "--hover-foreground",
              "default": "var(--vscode-list-hoverForeground)"
            },
            {
              "name": "--hover-background",
              "default": "var(--vscode-list-hoverBackground)"
            },
            {
              "name": "--inactive-selection-background",
              "default": "var(--vscode-list-inactiveSelectionBackground)"
            },
            {
              "name": "--active-selection-background",
              "default": "var(--vscode-list-activeSelectionBackground)"
            },
            {
              "name": "--active-selection-foreground",
              "default": "var(--vscode-list-activeSelectionForeground)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "TreeItem[]"
              },
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "indent",
              "type": {
                "text": "number"
              },
              "default": "8",
              "deprecated": "true",
              "attribute": "indent"
            },
            {
              "kind": "field",
              "name": "arrows",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "arrows"
            },
            {
              "kind": "field",
              "name": "multiline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multiline"
            },
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "TreeItem[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_selectedItem",
              "type": {
                "text": "TreeItem | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_focusedItem",
              "type": {
                "text": "TreeItem | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "getItemByPath",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TreeItem | null"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "number[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getItemType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ItemType"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "TreeItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getIconName",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "TreeItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTreeItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{\n    indentLevel,\n    label,\n    path,\n    iconName,\n    open = false,\n    itemType,\n    selected = false,\n    focused = false,\n    subItems,\n  }",
                  "type": {
                    "text": "{\n    indentLevel: number;\n    label: string;\n    path: number[];\n    iconName: string | undefined;\n    open: boolean;\n    itemType: ItemType;\n    selected: boolean;\n    focused: boolean;\n    subItems: TreeItem[];\n  }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTree",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tree",
                  "type": {
                    "text": "TreeItem[]"
                  }
                },
                {
                  "name": "oldPath",
                  "default": "[]",
                  "type": {
                    "text": "number[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleSubTreeOpen",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "TreeItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectTreeItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "TreeItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "focusTreeItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "TreeItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "closeSubTreeRecursively",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tree",
                  "type": {
                    "text": "TreeItem[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitSelectEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "TreeItem"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_focusItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "TreeItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_focusPrevItem",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_focusNextItem",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onComponentClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onComponentKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onComponentKeyDownBound",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "closeAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "events": [
            {
              "name": "vsc-select",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when an item is selected. The event data shape is described in the `SelectEventDetail` interface."
            }
          ],
          "attributes": [
            {
              "name": "data",
              "type": {
                "text": "TreeItem[]"
              },
              "fieldName": "data"
            },
            {
              "name": "indent",
              "type": {
                "text": "number"
              },
              "default": "8",
              "deprecated": "true",
              "fieldName": "indent"
            },
            {
              "name": "arrows",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "arrows"
            },
            {
              "name": "multiline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiline"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabindex"
            }
          ],
          "superclass": {
            "name": "VscElement",
            "module": "/src/includes/VscElement"
          },
          "tagName": "vscode-tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VscodeTree",
          "declaration": {
            "name": "VscodeTree",
            "module": "src/vscode-tree/vscode-tree.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vscode-tree",
          "declaration": {
            "name": "VscodeTree",
            "module": "src/vscode-tree/vscode-tree.ts"
          }
        }
      ]
    }
  ]
}
